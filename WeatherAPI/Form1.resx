<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAMMAAADDAAAAAAAAAAA
        AAD31KMA99SjAvfUo0D31KOx99Sj7/fUo/731KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fU
        o//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj/vfUo+331KOx99SjRffU
        owP31KMAAAAAAPfUowH31KNb99Sj5ffUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fU
        o//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fU
        o//31KPq99Sjb/fUowX31KMA99SjQffUo+P31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fU
        o//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fU
        o//31KP/99Sj//fUo//31KPz99SjW/fUowD31KOw99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fU
        o//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fU
        o//31KP/99Sj//fUo//31KP/99Sj//fUo//31KPK99SjGffUo+331KP/99Sj//fUo//31KP/99Sj//fU
        o//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fU
        o//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo/b31KNT99Sj/PfUo//31KP/99Sj//fU
        o//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fU
        o//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo3r31KPo99Sj//fU
        o//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fU
        o//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP+99SjeffU
        o6H31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fU
        o//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fU
        o/T31KNQ99SjMPfUo9b31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fU
        o//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fU
        o//31KP/99SjxffUoxb31KMA99SjQ/fUo9P31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fU
        o//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fU
        o//31KP/99Sj//fUo+/31KNS99SjAPfUowD31KMA99SjIvfUo3n31KO399Sj8ffUo//31KP/99Sj//fU
        o//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fU
        o//31KP/99Sj//fUo//31KPl99SjZPfUowP31KMAAAAAAAAAAAD31KMA99SjAPfUox731KPZ99Sj//fU
        o//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fU
        o//41KP9+dSi2ffUo9P31KPF99SjjffUozL31KMB99SjAAAAAAAAAAAAAAAAAAAAAAD31KMA99SjLvfU
        o+z31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fU
        o//31KP/+NSj/+zUqPat08FW/9SZEPfUowz31KMB99SjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPfU
        owD31KMw99Sj7ffUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fU
        o//31KP/99Sj//jUo//51KL/mdLK/yPQ/Mga0P8oH9D+AADO/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA99SjAPfUoxv31KPa99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fU
        o//41KP/+9Sh//vUof/71KH/8tSl/6jSxP8y0PX/H9D+/yDQ/a4g0P0NIND9AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD31KMA99SjA/fUo5731KP/99Sj//fUo//31KP/99Sj//fUo//31KP/99Sj//fU
        o//31KP/9NSk/5/SyP+c0sn/s9PA/6DSx/9m0eD/KdD5/x/Q/v8g0P3/IND9+CDQ/Vgg0P0AIND9AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPfUowD31KMA99SjOvfUo+f31KP/99Sj//fUo//31KP/99Sj//fU
        o//31KP/99Sj//rUov/F07j/MdD2/x7Q/v8j0Pz/IND9/x3Q/v8f0P3/IND9/yDQ/f8g0P3/IND9qyDQ
        /QUg0P0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPfUowD31KMB99SjZ/fUo/D31KP/99Sj//fU
        o//31KP/99Sj//jUo//71KH/19Ow/1HR6f8e0P7/IND9/yDQ/f8g0P3/IND9/yDQ/f8g0P3/IND9/yDQ
        /f8g0P3ZIND9GiDQ/QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPfUowD31KME99SjU/fU
        o8r31KP5+NSj//rUov/51KL/7dSn/7PTv/9K0ev/HtD+/yDQ/f8g0P3/IND9/yDQ/f8g0P3/IND9/yDQ
        /f8g0P3/IND9/yDQ/eog0P0pIND9HSDQ/Ygg0P2SIND9gwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPfU
        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
        AE//hACH/w8Dg/8fz8P/H8/j///P////z/8=
</value>
  </data>
</root>